package prepbytes.topic.stack;

import java.util.Stack;

public class StackSpan {
	public static void main(String[] args) {
		// int[] input = new int[] { 10, 20, 30, 5, 10, 20, 50 };
		int[] input = new int[] { 5, 4, 3, 2, 1, 5, 2, 32, 32, 3, 23, 23, 23, 23, 23, 23, 2, 32, 32, 3, 23, 23, 23, 2,
				32, 32, 32, 3, 23, 23, 23, 23, 2, 123, 123, 123, 123, 13, 12, 31, 31, 31, 32, 1232, 13, 12, 31, 31, 312,
				31, 312, 3, 13, 123, 12, 321, 31, 3, 1223, 1, 31, 3, 13, 13, 1, 31, 3, 132, 12, 312, 312, 31, 31, 3,
				123, 123, 123, 5, 4, 3, 2, 1, 5, 2, 32, 32, 3, 23, 23, 23, 23, 23, 23, 2, 32, 32, 3, 23, 23, 23, 2, 32,
				32, 32, 3, 23, 23, 23, 23, 2, 123, 123, 123, 123, 13, 12, 31, 31, 31, 32, 1232, 13, 12, 31, 31, 312, 31,
				312, 3, 13, 123, 12, 321, 31, 3, 1223, 1, 31, 3, 13, 13, 1, 31, 3, 132, 12, 312, 312, 31, 31, 3, 123,
				123, 123, 5, 4, 3, 2, 1, 5, 2, 32, 32, 3, 23, 23, 23, 23, 23, 23, 2, 32, 32, 3, 23, 23, 23, 2, 32, 32,
				32, 3, 23, 23, 23, 23, 2, 123, 123, 123, 123, 13, 12, 31, 31, 31, 32, 1232, 13, 12, 31, 31, 312, 31,
				312, 3, 13, 123, 12, 321, 31, 3, 1223, 1, 31, 3, 13, 13, 1, 31, 3, 132, 12, 312, 312, 31, 31, 3, 123,
				123, 123, 5, 4, 3, 2, 1, 5, 2, 32, 32, 3, 23, 23, 23, 23, 23, 23, 2, 32, 32, 3, 23, 23, 23, 2, 32, 32,
				32, 3, 23, 23, 23, 23, 2, 123, 123, 123, 123, 13, 12, 31, 31, 31, 32, 1232, 13, 12, 31, 31, 312, 31,
				312, 3, 13, 123, 12, 321, 31, 3, 1223, 1, 31, 3, 13, 13, 1, 31, 3, 132, 12, 312, 312, 31, 31, 3, 123,
				123, 123, 5, 4, 3, 2, 1, 5, 2, 32, 32, 3, 23, 23, 23, 23, 23, 23, 2, 32, 32, 3, 23, 23, 23, 2, 32, 32,
				32, 3, 23, 23, 23, 23, 2, 123, 123, 123, 123, 13, 12, 31, 31, 31, 32, 1232, 13, 12, 31, 31, 312, 31,
				312, 3, 13, 123, 12, 321, 31, 3, 1223, 1, 31, 3, 13, 13, 1, 31, 3, 132, 12, 312, 312, 31, 31, 3, 123,
				123, 123, 5, 4, 3, 2, 1, 5, 2, 32, 32, 3, 23, 23, 23, 23, 23, 23, 2, 32, 32, 3, 23, 23, 23, 2, 32, 32,
				32, 3, 23, 23, 23, 23, 2, 123, 123, 123, 123, 13, 12, 31, 31, 31, 32, 1232, 13, 12, 31, 31, 312, 31,
				312, 3, 13, 123, 12, 321, 31, 3, 1223, 1, 31, 3, 13, 13, 1, 31, 3, 132, 12, 312, 312, 31, 31, 3, 123,
				123, 123, 5, 4, 3, 2, 1, 5, 2, 32, 32, 3, 23, 23, 23, 23, 23, 23, 2, 32, 32, 3, 23, 23, 23, 2, 32, 32,
				32, 3, 23, 23, 23, 23, 2, 123, 123, 123, 123, 13, 12, 31, 31, 31, 32, 1232, 13, 12, 31, 31, 312, 31,
				312, 3, 13, 123, 12, 321, 31, 3, 1223, 1, 31, 3, 13, 13, 1, 31, 3, 132, 12, 312, 312, 31, 31, 3, 123,
				123, 123, 5, 4, 3, 2, 1, 5, 2, 32, 32, 3, 23, 23, 23, 23, 23, 23, 2, 32, 32, 3, 23, 23, 23, 2, 32, 32,
				32, 3, 23, 23, 23, 23, 2, 123, 123, 123, 123, 13, 12, 31, 31, 31, 32, 1232, 13, 12, 31, 31, 312, 31,
				312, 3, 13, 123, 12, 321, 31, 3, 1223, 1, 31, 3, 13, 13, 1, 31, 3, 132, 12, 312, 312, 31, 31, 3, 123,
				123, 123 };
		long milli = System.currentTimeMillis();
		int[] output = spanUsingArraybacktrack(input);
		for (int i : output)
			System.out.print(i + " ");
		System.out.println("\n" + (System.currentTimeMillis() - milli));
		milli = System.currentTimeMillis();
		output = spanUsingStack(input);
		for (int i : output)
			System.out.print(i + " ");
		System.out.println("\n" + (System.currentTimeMillis() - milli));
	}

	private static int[] spanUsingArraybacktrack(int[] input) {
		int[] span = new int[input.length];
		span[0] = 1;
		int index = 1;
		while (index != input.length) {
			int left = index - 1;
			while (left >= 0 && input[left] <= input[index]) {
				span[index] += span[left];
				left -= span[left];
			}
			span[index++]++;
		}
		return span;
	}

	private static int[] spanUsingStack(int[] input) {
		Stack<Integer> stack = new Stack<>();
		int[] span = new int[input.length];
		int index = 0;
		stack.push(index);
		span[0] = ++index;
		while (index != input.length) {
			while (!stack.isEmpty() && input[stack.peek()] <= input[index]) {
				stack.pop();
			}
			if (stack.isEmpty())
				span[index] = index + 1;
			else
				span[index] = index - stack.peek();
			stack.push(index++);
		}
		return span;
	}
}
